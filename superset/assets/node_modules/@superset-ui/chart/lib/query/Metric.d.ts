import { Column } from './Column';
export declare enum MetricKey {
    METRIC = "metric",
    METRICS = "metrics",
    PERCENT_METRICS = "percent_metrics",
    RIGHT_AXIS_METRIC = "metric_2",
    SECONDARY_METRIC = "secondary_metric",
    X = "x",
    Y = "y",
    SIZE = "size"
}
export declare enum Aggregate {
    AVG = "AVG",
    COUNT = "COUNT ",
    COUNT_DISTINCT = "COUNT_DISTINCT",
    MAX = "MAX",
    MIN = "MIN",
    SUM = "SUM"
}
export declare enum ExpressionType {
    SIMPLE = "SIMPLE",
    SQL = "SQL"
}
interface AdhocMetricSimple {
    expressionType: ExpressionType.SIMPLE;
    column: Column;
    aggregate: Aggregate;
}
interface AdhocMetricSQL {
    expressionType: ExpressionType.SQL;
    sqlExpression: string;
}
export declare type AdhocMetric = {
    label?: string;
    optionName?: string;
} & (AdhocMetricSimple | AdhocMetricSQL);
export declare type FormDataMetric = string | AdhocMetric;
export declare type Metric = {
    label: string;
} & Partial<AdhocMetric>;
export {};
